<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAI1QTFRF////
        ygAAxwAAyQAAyAAA/fj4/vz8+/Dw9dra8s7O6amq+uzs3XV26rCw4YeI/fX15ZiZ1lVW9+Dg2F9g7r6+
        +Obm5p+g7bi52mlq0TU29NTV1UxN4o6P8MbG3n1+0TIz0j4/zyUmzRMUzh0ezykqzAwN45KT2Fxd00RF
        3nt8225v2mdo1lJT0js856WlJwDwZgAAD2xJREFUeF7lndt23dYNRfchKTmWZEmWL4ql2onvSRz7/z+v
        ADYuC9h66CPGKF7MwzG5ZguyPaR4CA6v/+i/UW/udSHq/o0uRK3bNY263y51yevqky5EfbrSBa/LbTH2
        jBofj4pdbgt2vy3Gq+OjLnn1jLrfThW7OvbPumj1ea/GS9quGHtGEXUq2OVxqhgJT0c2Xh2nauwZxVRp
        F1EV+7hTVjJSs6qxZxQ3q2BCZUyE2cjC057+t98zalIJEyq3S4TJOIXJ2DNKKcSUQkyFaJzCZOwZZRRg
        SuG+/jSFYDQhGHtGWbMAcyowF4bRhNCunlFBOeZUYC50Ywjd2DPKdzSVYkAZBkIzhtAPm55RL4A6bXIS
        +09QhoHwdPzDa96k7V7wqp5R41dad8erXsGG+0ko+tdrf8Vr7tJ2v3hVz6iE7b/LGmyE9gF7Ols6foft
        prBpFGJKjd/9gNi/zjXjq295TCEaVdg0CrD9h64JzKkwmnD88O1M2DQqMKd8X/uOjsNGjxkqN0azekZ5
        u2xHUxkGlBlDaIcNNKtplGFAabsSNY3RLDdis3pGjbEzBs0yLFHTiMLZrn3XT1I9oyaWKPl+tZMCLf5+
        nd+rVmLMzeoZJVhq1sQKxcYs5HYVYdMoxgpF7UrHO9fXPTdLjLVZPaOoXZUibKFebFVIxtqsplGEVWr8
        Ht86Vqd8zFC9WZvVM2qMD/pv1N2FLkRdyClwqnW7plFj3fDZe12Iev9MF6LW7ZpGvd9udMnr+osuRH25
        1gWvm20x9owa77aKnR0L9n47znTR6np7p0tePaPeb6ejtOv62Cv2bj+K8eY4VWPPqPGTvlszRlTFSFiN
        1/Td+lOXtXpGMVUwok6lXe/4/CgZWViMPaOEyphQGRNhNrKwGHtGTSphQmVMhMk4hcnYM0opxJRCTIVo
        nMJk7BllFGBKnfY/dMUYf0whGE0Ixp5R1izAnArMhWE0IbSrZ1RQjjkVmAvdGEI39ozyHU2lGFCGgdCM
        IfTDpmfUa6BOh5zEfoAsxUB4OuTM/RlAp+01r+oZNW4xa3vgVY+w4el0TmvOdVlqf2ToIW13y6t6RtEF
        ZNT+Utb8BtjxVla9hd5sv8mql2iUNU2jEFMqYXMNGFWIRhU2jQJs/1fXBOZUGE04/g2jrmkaFZhT0C5d
        EUZrFhijWT2jHAvKMaDe6qoQhlE/U+mKZlHWLqAc049ccwUIzYjN6hmlGFKKJWoaUWhG/SQlK9pFzX2d
        KMX0wyxekYTTuKVm9YwSLFOCFYqNWTiNuqzVM4r3daEE00WrRcjGfLx3jSLs+K5LVr9tdUdTu6pwfD+q
        sGkUYZUaL1fqVJrFxqVZPaPov7b+G/Wg561Qt3IKnGrdrmnUmBcaWGfPdSHqef3j8lPbNY162PhyJNXt
        X7oQ9dfSwPN5ZYPVM2r8a9dSUfuCPWz59j/V7WbnxV49o/jCsbTr9pjXlFCP+1GMdA1ajT2j+Pq5YHz9
        XDC5fs7G20OvraN6RgmV9zVRFeM/IxQjnzxkY88ooTLGzSqYCHO7WFiMPaOUQkyojIkwGacwGXtGKYXY
        +VyDmAn3ME5hMvaMMgrapRRiKgSjNguNPaOcCsypwELoRhOCsWcUULavnQrMhW60Y4bKjD2jxl+xTrFo
        lmMgtHaF8LTrqVTPqOdI7XIS+y0oa1c0i4zfeM0ZrDltcj7cM2r8BzbUdX8iJj9WOUNo/5Oh9J/hkIen
        e0YlbFIJUwqN2ho0zt/s9IxKmFKIzSME974K0ajCplGA+c9sAnMqjCbkH/RoqbBpFGBORbtsR8dhY80C
        owubRnm7gnIMKDOG0I3RrJ5RjgFlGFBqBKEZQdg0Svc1UoolahpRqEY/Zqh6RimWqHlOgTt6tsvOE2aJ
        cX7VWvWMEiw1a2KF4pOKLJR2JWHTKMEKxVje0XzYFCEbi7BpFLUr72iq59tCfTuqkA6b2qyeUYQt1Piz
        NIvbVZrFxipsGjXOyq+Gqd7rL8Wgru2XYlE/l2b1jKIt9d+oc7uAjHrQa1GodbumUXfLX8bHr/UGznd9
        /BtqXx5Y6Rk1fmzLYyb6GDzU3bbcvLvY7Dlkr55Rdxs8PTzrYpvP8EO92hfjaa/GnlH8iHfF+HwiYzKv
        QJe1LrZ4mFyrZ5RQGSNKBzF48diGYuTNsrFnlFAFYypjU5iMLCzGnlFKISZUxkSYjbwiG3tGKZUwWZEw
        E4JxCpOxZ5RTgSmFmArROFegsWeUU4DpCsBC6EYTgrFnFFCGORWYC8Oon6nM2DNqfHcqhvJEKYZCNcIY
        oF1PpXpGJWpiOMJI2xXNcqN+kprGnlH4kAmtk5NyfFDjtPGFyBkK5+Mc+LyKPtbSM2o8g3X7fFAaH1g5
        /pZVf4NRH0X5gg2Up1p6RiVMKcTmEzn4tI0K0ajCplHQrt1m0wbmVBhNKJNDZ1mzekbBI1NORbuccqM1
        C4zzoSqunlG+r4NyDCgzhtCNesxQ9YxyDCjb17GjrV1+zFCpEYRNoxSDZhmWqGlEobYLhE2jFEvUxHBH
        z8MmCacxCZtGSbtwR1MxVig2ZqEcNrlZPaMEKxS3q1BkzM0SYxE2jaJ9XSnCFurDUYVkTMcMVc8owhZq
        fKw7mtqVjxmq11sVNo0az9bhWK91Mi/U1SIcn5Zm9YwaY7nJM8byvMoTa57armfUpV5AQt3XWWlj/GPT
        laNOOqg5qmfUuPLR0F6fbcq01+XmI7Kt7rflqOkZdbmVLx6mbES219WxGD/u1dgziqdgV+wzffNk7JK+
        eUq77umbpxh7RvEw8ILxMPCC8TDwYuSZ6NnYM0qogjGVMRYWIwuLsWeUUBkTKmMizEYRJmPPKKUSxpNd
        eVVgU5hGn05hMvaMUgrbpRRiKkTjbBYae0Y5BZhRgZkQjCYEY88op2JfOxWYC8OoxwyVGXtGAeWYN8ux
        EHq7QujGnlFAGQaUYSA0IwjV2DPq/+C+Bd7l0UnScaOOVs0xxDa0n0tv1ence6n1hlGfKPnVipWNUAZM
        pzHzqHAtG6jNo8K17NcrPaMA818gBeYj+aNdPkna3rzgwqZRhNkx71S0yyk3WrPAGKPhe0Y5FpRj3qxo
        VwjdGM3qGeUYULavgVIj/pZOjSBsGqUYnr0qlt5MMA8bFOr5AzarZ5RiiZr7OlFihGOGSoxJ2DRKsP3Q
        D7MYKxQbs3AcZMzN6hnFr0uoFO/rQpExHTNUZKwvaOgZRVilCCvN4nZVIRlrs3pGUbsWanxdqDdbOt65
        XmzLX2h7Ro038H+3Wi/sx2NRrxbhOC3N6hn11F/6z5+4Q7A+2fA/3WzoEHVTb9TRhch6h+qDXMak+qKD
        mqN6Ro3reQ2G9c6mTHvdHD4i2+r98gaKplE3R31dAlF6ARl1vb4+4+dejT2j+JK6Yu+efNKvtIsuqaux
        ZxQPAy8Y/zmgYPyXhWLkmei5XT2jhCoYUxmTmejZyMJi7BklVMaEypgIs1GEydgzSqmE6R+2AJtC/ZPW
        rClMxp5RSmG7lEJMhWiczUJjzyinADMqsBtNB6MJwdgzyppFmO1rpwJzYRjjT7Rm7BkFlGPeLMdC6O0K
        oRt7RgFlGFCGgdCM0Swz9ozS0RlaE4shNlRP3CGQUykU6jCOnlF5ItgcCYavz9A3E8AbB/TFGDhcTKeL
        9YxKmE3B1o9cOo2ZR4V7yRqd9y5lL2joGZUwXRWYDwOXOedSPgxcP1PZUOqeUYA5FZhTYNQ1YYyZ6D2j
        ANMVgfmOjsMmhG6MZvWM8nYBZRhQbtTPVGqEZjWNckw/csmbFzI1jWmeO6/IzeoZpVieRb9SatRPUmJM
        wqZRiumHWbyvC8VGPGaoeLPcrJ5RguVmCVYoMeqyFrWrCJtGCaaLVm+3hXq5VyEZa7N6RhG2UGOlyKhL
        Xm+3ZSJOzyjCdCHqrQ3rjXpchGNtVs8oOinXf6POnpjIlP9UybVu1zTqfG3N83Ui2Lf1jsfjclukZxRd
        miy9eYQ557POfcq018P6BoqeUeeno2IPm43I9ro9FuPjoVOmvXpG8RTsij3u5c0L/FaF2i66UK3GnlF8
        ZVwwvsguGA8DL0YZqJ3a1TNKqIIJlTD5A0E2srAYe0bJSz0yJlTGRJiNU5gOm55Rk0rYpLBd0qxsnMJk
        7BmlFGJKIaZCNJowjD2jnALMKf/28bcqhNGEYOwZZc0izCa+OhWYC8MIL2hQY88ooBzzZlFNLITerhC6
        sWcUvNTDMKAMA6EZUTgPm55RPHA5as7thR1NmNwhSGvksOHB015zfHHPqHwvY5e7NXhbRCdJ84hsq3nD
        4wbj572TnlHpno7erMHe6DRm7I1Okgaj/bCnZxRi9mOcwHwYeLRLhfxTHSsVNo0CzChol1Nh1GaB0YVN
        owJzyjGgzOjCMEazekY5FpTva6DMCD8rUyMIm0YZFs2y/7dO1DTiWHttFzarZ5Ri0CzDEjWNKJztSsKm
        URODHU3FmJ8RzuKv3CSch01uVs8owXBHU3G7CsXG1Cw5bIqwaRRjhSKs7Gg+bIqQjbVZPaOoXcsbIc7X
        F2M83455Lhv1bavNahpFWGkWHfN20hP1Mx3vXGdrs3pGjbE+lXGzUs/nz6iw1u2aRo31MZo7HVAM9Usf
        joZat2sadWFPdke9Wm7LjdPySM6dPiQO1TNqnI7yugSiFuxiW4w/jsXYM+pi88fzrXiStC5a0RdPadcd
        bVeMPaOIqhgPNSgYDzUoRhmorctaPaOYKphQGeMV2cjCYuwZJVTGhMqYCLNxCpNRVrSL0nnuiCmF2FyB
        xin0ufdcPaOUQkwpbNdsVjKaEIy6olmUUYA5FZh+BqMJwdgzyqnAnIp9HW8mcGMI3agfm0UF5RhQhukn
        KjOG0I09o4AyDCjb137MUKkRhWrUD1yNouTXmFbz11L8g8YovviCmzxklN/O8c/qvObvz3pGpRFaOh0L
        R2jpBFGd9y41B23hNC4dtNUzKmH6VgXEdBozjwq30iFh8AYKG6TaMwoxmyTNc85n+UBtmfcuZQO1eWS6
        lg2l7hkFmA8DtzcvABVGHwbuxpgr3jMqsBgGbvvad3QcNv5+kGhXNKtnlLfLmxUYUGYMobULmtU0yjCc
        RT+xRE0jCO2wwWb1jNJ9jZS2K1HTiMJphGOGqmfUxGBHUzGWmjXblYTTmJvVM0qwTMm+LhQbU7PEWIRN
        oxjLzWKs7Gg+bIqQ21Wb1TOK2rW8EeJmW6jX21b/vPxhq81qGkVYaRZhOrcW6nMVUruWZvWMGkN/AwZ1
        uVKv57kf1rpdp6gx/gtnq/QvnX6jOwAAAABJRU5ErkJggg==
</value>
  </data>
</root>